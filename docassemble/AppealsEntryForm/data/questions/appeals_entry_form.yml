---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: >-
    Appeals entry form
  short title: >-
    Appeals entry form
  description: |-
    This interview helps someone in Massachusetts create a Civil Appeal Entry Form
  can_I_use_this_form: |
    If you are looking to appeal your civil case, you can use this interview to create an entry of appeal form.
  before_you_start: |
    This interview will help you create the Civil Appeal Entry Form.
    
    Before you get started, please gather:
    
    1. Your case information
    
    When you are finished, you will need to:
    
    1. Submit a PDF of the form on eFileMA.com
    2. The completed form and any necessary fee or motion to waive the fee must be received within 14 days of your receipt of the notice of assembly from the clerk of the lower court. See Mass. R. A. P. 10(a)(1).
  maturity: production
  estimated_completion_minutes: 10
  estimated_completion_delta: 5
  LIST_topics: 
    - "GO-00-00-00-00"
  tags:
    - "GO-00-00-00-00"
  authors:
    - kat-lynch
  original_form:
    - https://courtforms.jud.state.ma.us/content/dam/formsanddocuments/publicforms/AC0003.xdp/jcr:content
  original_form_published_on: 2022-03-09
  allowed_courts: 
    - "Massachusetts Appeals Court"
  typical_role: "plaintiff"
  al_weaver_version: "1.11.0"
  generated_on: "2025-09-10"
  languages:
    - en
  jurisdiction: NAM-US-US+MA
  review_date: 2025-09-10
  form_titles:
    - Appeals entry form
  form_numbers: []
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-AppealsEntryForm'
---
code: |
  interview_short_title = "Appeal Entry Form"
---
code: |
  al_form_type = "appeal" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_appeals_entry_form: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_appeals_entry_form
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Massachusetts Appeals Court', 'Other']
  nav.set_section("review_appeals_entry_form")
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  users.gather()
  set_parts(subtitle=str(users))
  trial_court
  docket_number
  set_progress(25)
  case_name
  appellant_name
  appellant_is_commenweath
  set_progress(50)
  notice_of_assembly_received_date
  interview_order_appeals_entry_form = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  appeals_entry_form_intro
  interview_order_appeals_entry_form
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  appeals_entry_form_download
---
id: Appeals_entry_form
continue button field: appeals_entry_form_intro
question: |
  Appeals entry form
subquestion: |
  This interview will help you create the Civil Appeal Entry Form.
  
  Before you get started, please gather:
  
  1. Your case information
  
  When you are finished, you will need to:
  
  1. Submit a PDF of the form on eFileMA.com
  2. The completed form and any necessary fee or motion to waive the fee must be received within 14 days of your receipt of the notice of assembly from the clerk of the lower court. See Mass. R. A. P. 10(a)(1).

  If you are looking to appeal your civil case, you can use this interview to create an entry of appeal form.

  Most people take about 10 minutes to complete this interview.
---
id: What is the case name
question: |
  What is the case name?
subquestion: |
  Please type the name of the case
fields:
  - "Case name": case_name
---
id: What the appellant s name
question: |
  What the appellant's name?
subquestion: |
  If you are submitting this form on behalf of yourself, this is your name.
fields:
  - "Appellant name": appellant_name
---
id: Fee information
question: |
  Fee information?
fields:
  - "Appellant is commonwealth": appellant_is_commenweath
    datatype: yesno
  - "Fee waiver requested": fee_waiver_requested
    datatype: yesno
  - "Paying fee": paying_fee
    datatype: yesno
---
id: Date notice of assembly was received
question: |
  Date notice of assembly was received?
fields:
  - "Date of Notice of assembly received": notice_of_assembly_received_date
    datatype: date
---
id: preview appeals_entry_form
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_appeals_entry_form'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: appeals_entry_form_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: appeals entry form review screen
event: review_appeals_entry_form
question: |
  Review your answers
review:
  - Edit: appellant_is_commenweath
    button: |
      **Appellant is commenwealth**:
      ${ word(yesno(appellant_is_commenweath)) }
  - Edit: appellant_name
    button: |
      **Appellant name**:
      ${ appellant_name }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: trial_court
    button: |
      **Trial court**
  
      % if defined("trial_court.name.first"):
      * name: ${ trial_court.name.full() }
      % endif
  - Edit: notice_of_assembly_received_date
    button: |
      **Date of Notice of assembly received**:
      ${ notice_of_assembly_received_date }
  - Edit: case_name
    button: |
      **Case name**:
      ${ case_name }
  - Edit: fee_waiver_requested
    button: |
      **Fee waiver requested**:
      ${ word(yesno(fee_waiver_requested)) }
  - Edit: paying_fee
    button: |
      **Paying fee**:
      ${ word(yesno(paying_fee)) }
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
id: download appeals_entry_form
event: appeals_entry_form_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_appeals_entry_form'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - appeals_entry_form_Post_interview_instructions: ALDocument.using(title="Instructions", filename="appeals_entry_form_next_steps.docx", enabled=True, has_addendum=False)
  - appeals_entry_form_attachment: ALDocument.using(title="Appeals entry form", filename="appeals_entry_form", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[appeals_entry_form_Post_interview_instructions, appeals_entry_form_attachment], filename="appeals_entry_form", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[appeals_entry_form_attachment],  filename="appeals_entry_form", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: appeals_entry_form_next_steps
  docx template file: appeals_entry_form_next_steps.docx
  variable name: appeals_entry_form_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: appeals entry form
  filename: appeals_entry_form
  variable name: appeals_entry_form_attachment[i]
  skip undefined: True
  docx template file: appeals_entry_form.docx
  tagged pdf: True



